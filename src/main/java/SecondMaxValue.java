/**
 * The SecondMaxValue interface has to find the second maximum number in several ways. This interface
 * is overridden in methods SecondMaxValue1 and SecondMaxValue2
 * <p>
 * Ð¡lass AggregateList
 * In it the user sets the dimension and fills the list with numbers. So it checks for the correctness
 * of the input, it checks whether the number is entered, if not, then throws it out InputMismatchException
 * <p>
 * SecondMaxValue1 and SecondMaxValue2 accept a list generated by random
 * numbers and filtered repeated values as input and find the second value from the passed list
 * <p>
 * SecondMaxValue1 and SecondMaxValue2 are checked if null is passed to
 * the input, then it throws NPE (NullPointerException), and it is also
 * checked for the size of the list (size <= 2) - it throws IIE (IllegalInputException).
 * <p>
 * The Finder class contains the main method in which the lists are looking for the second
 * maximum element in two ways
 */
public interface SecondMaxValue {
    Integer findSecondMaxValue(Iterable<Integer> input) throws IllegalInputException;
}
